{"version":3,"sources":["components/filter/selectMethods.js","components/filter/filterbydemographic.js","utilities/constant.js","components/filter/searchby.js","components/filter/vaccineType.js","components/filter/ageGroup.js","components/filter/dose.js","components/filter/index.js","components/vaccinationslots/index.js","App.js","services/getData.js","reportWebVitals.js","index.js"],"names":["renderDistrict","district","handleClick","modifiers","query","matchesPredicate","text","district_name","active","disabled","onClick","highlightText","rank","renderState","state","state_name","escapeRegExpChars","replace","filterDistrict","toLowerCase","indexOf","filterState","lastIndex","words","split","filter","word","length","map","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","FilterByCity","setCity","onCitySelect","states","selectedState","cities","setSelectedState","selectedCity","setCities","onStateSelect","setSelectedCity","className","popoverProps","usePortal","items","itemPredicate","itemRenderer","noResults","onItemSelect","alignText","fill","rightIcon","SEARCHTYPE","VACCINETYPE","COVISHIELD","Covaxin","Sputnik","Both","VACCINETYPELABEL","Suptnik","AGEGROUP","AGEGROUPLABEL","DOSE","SearchBy","searchBy","selectedValue","onChange","event","target","value","label","VaccineType","vaccineType","setVaccineType","AgeGroup","ageGroup","setAgeGroup","Dose","whichDose","setWhichDose","PinCode","pinCode","setPinCode","type","placeholder","Filters","beginSearch","defaultStateName","States","defaultCityName","CitiesData","defaultSelectedCities","state_id","useState","srchBy","setSrchBy","selectedDistrictId","district_id","intent","searchType","VaccinationSlots","data","vaccineSlot","index","classes","classNames","name","address","pincode","getSlots","sessions","class","session","available_capacity","min_age_limit","date","vaccine","aria-current","href","Date","todayDate","getDate","getMonth","getFullYear","App","setData","isSearchStarted","setIsSearchStarted","lastCheckAt","setLastCheckedAt","searchCriteria","setSearchCriteria","sub","setSubscription","ad","Audio","dataReceivedCallBack","response","filterByVaccineAndAge","filteredData","parseInt","console","log","pause","playAudio","d","getHours","getMinutes","getSeconds","getTimeStamp","play","interval","setTimeout","clearInterval","unsubscribe","subscribe","axios","get","then","centers","cityId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f59ca54.chunk.js","sourcesContent":["import { MenuItem } from \"@blueprintjs/core\";\n\nexport const renderDistrict = (district, { handleClick, modifiers, query }) => {\n  if (!modifiers.matchesPredicate) {\n    return null;\n  }\n  const text = `${district.district_name}`;\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={district.rank}\n      onClick={handleClick}\n      text={highlightText(text, query)}\n    ></MenuItem>\n  );\n};\n\nexport const renderState = (state, { handleClick, modifiers, query }) => {\n  if (!modifiers.matchesPredicate) {\n    return null;\n  }\n  const text = `${state.state_name}`;\n  return (\n    <MenuItem\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={state.rank}\n      onClick={handleClick}\n      text={highlightText(text, query)}\n    ></MenuItem>\n  );\n};\n\nfunction escapeRegExpChars(text) {\n  return text.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n}\n\nexport const filterDistrict = (query, district) => {\n  return (\n    `${district.rank}. ${district.district_name.toLowerCase()} ${\n      district.state_name\n    }`.indexOf(query.toLowerCase()) >= 0\n  );\n};\nexport const filterState = (query, state) => {\n  return (\n    `${state.rank}. ${state.state_name.toLowerCase()}`.indexOf(\n      query.toLowerCase()\n    ) >= 0\n  );\n};\n\nfunction highlightText(text, query) {\n  let lastIndex = 0;\n  const words = query\n    .split(/\\s+/)\n    .filter((word) => word.length > 0)\n    .map(escapeRegExpChars);\n  if (words.length === 0) {\n    return [text];\n  }\n  const regexp = new RegExp(words.join(\"|\"), \"gi\");\n  const tokens = [];\n  while (true) {\n    const match = regexp.exec(text);\n    if (!match) {\n      break;\n    }\n    const length = match[0].length;\n    const before = text.slice(lastIndex, regexp.lastIndex - length);\n    if (before.length > 0) {\n      tokens.push(before);\n    }\n    lastIndex = regexp.lastIndex;\n    tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\n  }\n  const rest = text.slice(lastIndex);\n  if (rest.length > 0) {\n    tokens.push(rest);\n  }\n  return tokens;\n}\n","import { React } from \"react\";\nimport { Select } from \"@blueprintjs/select\";\nimport { Button, MenuItem } from \"@blueprintjs/core\";\nimport {\n  renderDistrict,\n  renderState,\n  filterDistrict,\n  filterState,\n} from \"./selectMethods\";\n\n\nexport function FilterByCity({ setCity, onCitySelect, states, selectedState, setSelectedState,cities, setCities, selectedCity, setSelectedCity,onStateSelect }) {\n  // const [states, setStates] = useState(States);\n  // const [selectedState, setSelectedState] = useState(`${States[0].state_name}`);\n  // const [cities, setCities] = useState(CitiesData[States[0].state_id]);\n\n  // const [selectedCity, setSelectedCity] = useState(\n  //   `${CitiesData[1][1].district_name}`\n  // );\n\n  // const onStateSelect = (event) => {\n  //   setSelectedState(event.state_name);\n  //   setCities(CitiesData[event.state_id]);\n  //   setSelectedCity(CitiesData[event.state_id][0].district_name);\n  // };\n\n  // const onCitySelect = (event) => {\n  //   setSelectedCity(event.district_name);\n  //   setCity(event.district_id);\n  // };\n\n  return (\n    <>\n      <div className=\"d-flex justify-center\">\n        <Select\n          className=\"fullwidth\"\n          popoverProps={{ usePortal: false }}\n          items={states}\n          itemPredicate={filterState}\n          itemRenderer={renderState}\n          noResults={<MenuItem disabled={true} text=\"No results.\" />}\n          onItemSelect={onStateSelect}\n        >\n          <Button\n            text={selectedState}\n            alignText=\"left\"\n            fill=\"{true}\"\n            rightIcon=\"caret-down\"\n          />\n        </Select>\n        <Select\n          popoverProps={{ usePortal: false }}\n          className=\"fullwidth\"\n          items={cities}\n          itemPredicate={filterDistrict}\n          itemRenderer={renderDistrict}\n          noResults={<MenuItem disabled={true} text=\"No results.\" />}\n          onItemSelect={onCitySelect}\n        >\n          <Button\n            text={selectedCity}\n            alignText=\"left\"\n            fill=\"{true}\"\n            rightIcon=\"caret-down\"\n          />\n        </Select>\n      </div>\n    </>\n  );\n}\n","export const SEARCHTYPE = {\n  Pin: \"PIN\",\n  City: \"CITY\",\n};\n\nexport const VACCINETYPE = {\n  COVISHIELD: \"COVISHIELD\",\n  Covaxin: \"COVAXIN\",\n  Sputnik: \"SPUTNIK\",\n  Both: \"BOTH\",\n};\n\nexport const VACCINETYPELABEL={\n  [VACCINETYPE.Both]:\"All\",\n  [VACCINETYPE.COVISHIELD]:\"Covishield\",\n  [VACCINETYPE.Covaxin]:\"Covaxin\",\n  [VACCINETYPE.Suptnik]:\"Sputnik V\",\n\n}\n\nexport const AGEGROUP = {\n  Both: \"BOTH\",\n  EighteenPlus: \"18\",\n  FortyFivePlus: \"45\",\n};\n\nexport const AGEGROUPLABEL={\n  [AGEGROUP.Both]:\"All Age Groups\",\n  [AGEGROUP.EighteenPlus]:\"18-44\",\n  [AGEGROUP.FortyFivePlus]:\"45+\",\n}\n\n\nexport const DOSE = {\n  Dose1: \"1\",\n  Dose2: \"2\",\n};\n","import { SEARCHTYPE } from \"../../utilities/constant\";\nimport { RadioGroup, Radio } from \"@blueprintjs/core\";\n\nexport function SearchBy({ searchBy, selectedValue }) {\n  const handleOnChange = (event) => {\n    searchBy(event.target.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex column align-center\">\n        <h3>Choose Search By</h3>\n        <RadioGroup\n          className=\"d-flex justify-center\"\n          onChange={handleOnChange}\n          selectedValue={selectedValue}\n        >\n          <Radio label=\"Pincode\" value={SEARCHTYPE.Pin} />\n          <Radio label=\"District\" value={SEARCHTYPE.City} />\n        </RadioGroup>\n      </div>\n    </>\n  );\n}\n","import { VACCINETYPE } from \"../../utilities/constant\";\nimport { RadioGroup, Radio } from \"@blueprintjs/core\";\n\nexport function VaccineType({ vaccineType, setVaccineType }) {\n  const handleOnChange = (event) => {\n    setVaccineType(event.target.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-center\">\n        <h3>Choose Vaccine</h3>\n      </div>\n      <div className=\"d-flex\">\n        <RadioGroup\n          className=\"d-flex justify-center\"\n          onChange={handleOnChange}\n          selectedValue={vaccineType}\n        >\n          <Radio label=\"Both\" value={VACCINETYPE.Both} />\n          <Radio label=\"Covishield\" value={VACCINETYPE.COVISHIELD} />\n          <Radio label=\"Covaxin\" value={VACCINETYPE.Covaxin} />\n        </RadioGroup>\n      </div>\n\n      {/* <div className=\"row searchby mt-4 mb-4\">\n        <div className=\" col-md-6 text-sm-center text-md-start\">\n          <div className=\"fw-bold\">\n            <label >Type of Medicine</label>\n          </div>\n        </div>\n        <div className=\"col-md-6 text-end filter-sm-row\">\n          <div>\n            <input\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccineboth\"\n              className=\"radio\"\n              value={VACCINETYPE.Both}\n              checked={selectedValue === VACCINETYPE.Both}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Both</label>\n          </div>\n          <div >\n            <input\n              className=\"radio\"\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccinecovishield\"\n              value={VACCINETYPE.Covishield}\n              checked={selectedValue === VACCINETYPE.Covishield}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Covishield</label>\n          </div>\n          <div >\n            <input\n              className=\"radio\"\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccinecovaxin\"\n              value={VACCINETYPE.Covaxin}\n              checked={selectedValue === VACCINETYPE.Covaxin}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Covaxin</label>\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n}\n","import { AGEGROUP } from \"../../utilities/constant\";\nimport { RadioGroup, Radio } from \"@blueprintjs/core\";\n\nexport function AgeGroup({ ageGroup, setAgeGroup }) {\n  const handleOnChange = (event) => {\n    setAgeGroup(event.target.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-center\">\n        <h3>Choose Age Group</h3>\n      </div>\n      <div className=\"d-flex\">\n        <RadioGroup\n          className=\"d-flex justify-center\"\n          onChange={handleOnChange}\n          selectedValue={ageGroup}\n        >\n          <Radio label=\"Both\" value={AGEGROUP.Both} />\n          <Radio label=\"18-44\" value={AGEGROUP.EighteenPlus} />\n          <Radio label=\"45+\" value={AGEGROUP.FortyFivePlus} />\n        </RadioGroup>\n      </div>\n\n      {/* <div className=\"row searchby mt-4 mb-4\">\n        <div className=\" col-md-6 text-sm-center text-md-start\">\n          <div className=\"fw-bold\">\n            <label >Type of Medicine</label>\n          </div>\n        </div>\n        <div className=\"col-md-6 text-end filter-sm-row\">\n          <div>\n            <input\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccineboth\"\n              className=\"radio\"\n              value={VACCINETYPE.Both}\n              checked={selectedValue === VACCINETYPE.Both}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Both</label>\n          </div>\n          <div >\n            <input\n              className=\"radio\"\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccinecovishield\"\n              value={VACCINETYPE.Covishield}\n              checked={selectedValue === VACCINETYPE.Covishield}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Covishield</label>\n          </div>\n          <div >\n            <input\n              className=\"radio\"\n              type=\"radio\"\n              name=\"vaccine\"\n              id=\"vaccinecovaxin\"\n              value={VACCINETYPE.Covaxin}\n              checked={selectedValue === VACCINETYPE.Covaxin}\n              onChange={(event) => searchBy(event.target.value)}\n            />\n            <label >Covaxin</label>\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n}\n","import { DOSE } from \"../../utilities/constant\";\nimport { RadioGroup, Radio } from \"@blueprintjs/core\";\n\nexport function Dose({ whichDose, setWhichDose }) {\n  const handleOnChange = (event) => {\n    setWhichDose(event.target.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex column align-center\">\n        <h3>Which Dose?</h3>\n        <RadioGroup\n          className=\"d-flex justify-center\"\n          onChange={handleOnChange}\n          selectedValue={whichDose}\n        >\n          <Radio label=\"Dose 1\" value={DOSE.Dose1} />\n          <Radio label=\"Dose 2\" value={DOSE.Dose2} />\n        </RadioGroup>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Button } from \"@blueprintjs/core\";\n\nimport { FilterByCity } from \"./filterbydemographic\";\nimport { SearchBy } from \"./searchby\";\nimport { VaccineType } from \"./vaccineType\";\nimport { AgeGroup } from \"./ageGroup\";\nimport { Dose } from \"./dose\";\n\nimport { DOSE, SEARCHTYPE, VACCINETYPE } from \"../../utilities/constant\";\n\nimport CitiesData from \"../../combined_cities.json\";\nimport States from \"../../states.json\";\n\nimport \"./filter.scss\";\n\nfunction Filters({ beginSearch }) {\n  const defaultStateName = States[0].state_name;\n  const defaultCityName = CitiesData[1][1].district_name;\n  const defaultSelectedCities = CitiesData[States[0].state_id];\n\n  const [srchBy, setSrchBy] = useState(SEARCHTYPE.Pin);\n  const [vaccineType, setVaccineType] = useState(VACCINETYPE.Both);\n  const [ageGroup, setAgeGroup] = useState(VACCINETYPE.Both);\n  const [whichDose, setWhichDose] = useState(DOSE.Dose1);\n  const [pinCode, setPinCode] = useState(\"\");\n  const [selectedDistrictId, setCity] = useState(\"\");\n  const [states] = useState(States);\n\n  const [selectedState, setSelectedState] = useState(defaultStateName);\n  const [cities, setCities] = useState(defaultSelectedCities);\n  const [selectedCity, setSelectedCity] = useState(defaultCityName);\n\n  const onStateSelect = (event) => {\n    setSelectedState(event.state_name);\n    setCities(CitiesData[event.state_id]);\n    setSelectedCity(CitiesData[event.state_id][0].district_name);\n  };\n\n  const onCitySelect = (event) => {\n    setSelectedCity(event.district_name);\n    setCity(event.district_id);\n  };\n\n  const searchBy = (type) => {\n    setSelectedState(defaultStateName);\n    setCities(defaultSelectedCities);\n    setSelectedCity(defaultCityName);\n    setPinCode(\"\");\n    setSrchBy(type);\n  };\n\n  const handleSearch = () => {\n    beginSearch({\n      searchType: srchBy,\n      pinCode: pinCode,\n      selectedDistrictId: selectedDistrictId,\n      selectedState:selectedState,\n      vaccineType: vaccineType,\n      ageGroup: ageGroup,\n      whichDose: whichDose,\n    });\n  };\n\n  return (\n    <div className=\"filters\">\n      <VaccineType\n        setVaccineType={setVaccineType}\n        vaccineType={vaccineType}\n      ></VaccineType>\n      <AgeGroup ageGroup={ageGroup} setAgeGroup={setAgeGroup}></AgeGroup>\n      <Dose whichDose={whichDose} setWhichDose={setWhichDose}></Dose>\n      <SearchBy searchBy={searchBy} selectedValue={srchBy}></SearchBy>\n      {srchBy === SEARCHTYPE.Pin && (\n        <PinCode pinCode={pinCode} setPinCode={setPinCode}></PinCode>\n      )}\n      {srchBy === SEARCHTYPE.City && (\n        <FilterByCity\n          setCity={setCity}\n          onStateSelect={onStateSelect}\n          onCitySelect={onCitySelect}\n          states={states}\n          selectedState={selectedState}\n          setSelectedState={setSelectedState}\n          cities={cities}\n          setCities={setCities}\n          selectedCity={selectedCity}\n          setSelectedCity={setSelectedCity}\n        ></FilterByCity>\n      )}\n      <div className=\"d-flex justify-center btn-search\">\n        <Button\n          text=\"Get Started\"\n          rightIcon=\"search\"\n          intent=\"success\"\n          disabled={pinCode === \"\" && selectedDistrictId === \"\"}\n          onClick={handleSearch}\n        ></Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PinCode({ pinCode, setPinCode }) {\n  const handleChange = (event) => {\n    setPinCode(event.target.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-center\">\n        <div className=\"bp3-input-group pincode \">\n          <span className=\"bp3-icon bp3-icon-filter\"></span>\n          <input\n            type=\"text\"\n            className=\"bp3-input\"\n            value={pinCode}\n            onChange={handleChange}\n            placeholder=\"Filter histogram...\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Filters;\n","import { Divider } from \"@blueprintjs/core\";\n\nimport classNames from \"classnames\";\nimport \"./vaccinationslots.scss\";\n\nexport function VaccinationSlots({ data }) {\n  return (\n    <div className=\"vaccine-slots\">\n      <div className=\"d-flex justify-center\">\n        <Divider className=\"divider\"></Divider>\n      </div>\n\n      <div className=\"container \">\n        <div className=\"d-flex\">\n          <div className=\"col-address  header\">\n            <p>Locations</p>\n          </div>\n          <div className=\"col-slots header\">\n            <p>Available Vaccine Slots</p>\n          </div>\n        </div>\n        {data.map((vaccineSlot, index) => {\n          const classes = classNames(\"d-flex row  row-space\");\n          return (\n            <>\n              <div className={classes}>\n                <div className=\"col-address bp3-running-text\" key={index + 1}>\n                  <p>{`${vaccineSlot.name}`}</p>\n                  <p> {`${vaccineSlot.address}`}</p>\n                  <p>\n                    <strong> {`${vaccineSlot.pincode}`}</strong>\n                  </p>\n                </div>\n                <div className=\"col-slots\">\n                  {getSlots(vaccineSlot.sessions)}\n                </div>\n              </div>\n              <Divider></Divider>\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst getSlots = (sessions) => {\n  return (\n    <ul class=\"nav nav-pills\">\n      {sessions\n        .filter((session) => session.available_capacity > 0)\n        .map((session) => {\n          const { available_capacity, min_age_limit, date, vaccine } = session;\n          return (\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link active\"\n                aria-current=\"page\"\n                href=\"https://selfregistration.cowin.gov.in/\"\n              >\n                <p className=\"capacity\">{available_capacity}</p>\n                <p className=\"age-limit\">{min_age_limit}+</p>\n                <p className=\"slot-date\">{date}</p>\n                <p className=\"vaccine-type\">{vaccine}</p>\n              </a>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","import { useState } from \"react\";\nimport { Card } from \"@blueprintjs/core\";\nimport { interval } from \"rxjs\";\nimport { Button } from \"@blueprintjs/core\";\n\nimport Filters from \"./components/filter\";\nimport { VaccinationSlots } from \"./components/vaccinationslots\";\nimport { getDataByCity, getDataByPinCode } from \"./services/getData\";\nimport {\n  AGEGROUP,\n  SEARCHTYPE,\n  VACCINETYPE,\n  AGEGROUPLABEL,\n  VACCINETYPELABEL,\n} from \"./utilities/constant\";\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"./App.scss\";\n\nconst date = new Date();\nconst todayDate = `${date.getDate()}-${\n  date.getMonth() + 1\n}-${date.getFullYear()}`;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isSearchStarted, setIsSearchStarted] = useState(false);\n  const [lastCheckAt, setLastCheckedAt] = useState(\"\");\n  const [searchCriteria, setSearchCriteria] = useState(\"\");\n\n  let [sub, setSubscription] = useState(null);\n\n  const ad = new Audio(\"./audio/notification.mp3\");\n\n  const dataReceivedCallBack = (response) => {\n    const data = response.filter((data) => {\n      return (\n        data.sessions.filter((session) => session.available_capacity > 0)\n          .length > 0\n      );\n    });\n\n    return data;\n  };\n\n\n  const filterByVaccineAndAge =\n    (vaccineType, ageGroup, whichDose) => (response) => {\n      let filteredData = response;\n      if (vaccineType !== VACCINETYPE.Both) {\n        filteredData = filteredData.filter((data) => {\n          return (\n            data.sessions.filter((session) => session.vaccine === vaccineType)\n              .length > 0\n          );\n        });\n      }\n\n      if (ageGroup !== AGEGROUP.Both) {\n        filteredData = filteredData.filter((data) => {\n          return (\n            data.sessions.filter(\n              (session) => session.min_age_limit === parseInt(ageGroup)\n            ).length > 0\n          );\n        });\n      }\n      console.log(\"searching dose \", `available_capacity_dose${whichDose}`);\n      filteredData = filteredData.filter((data) => {\n        return (\n          data.sessions.filter(\n            (session) => session[`available_capacity_dose${whichDose}`] > 0\n          ).length > 0\n        );\n      });\n\n      if (!isSearchStarted) {\n        setIsSearchStarted(true);\n        ad.pause();\n      }\n\n      const getTimeStamp = () => {\n        const d = new Date();\n        //console.log(`${todayDate} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`);\n        return `${todayDate} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n      };\n      if(filteredData.length > 0){\n        playAudio();\n      }\n\n      setLastCheckedAt(getTimeStamp());\n      setData(filteredData);\n    };\n\n  const beginSearch = ({\n    searchType,\n    pinCode,\n    selectedDistrictId,\n    vaccineType,\n    ageGroup,\n    whichDose,\n    selectedState,\n  }) => {\n    if (sub) {\n      sub.unsubscribe();\n    }\n    const district =\n      searchType === SEARCHTYPE.Pin\n        ? `Pincode ${pinCode}`\n        : `district ${selectedState}`;\n    setSearchCriteria(\n      `${district} for Age - ${AGEGROUPLABEL[ageGroup]}, Dose - ${whichDose}, Vaccine - ${VACCINETYPELABEL[vaccineType]}`\n    );\n\n    if (searchType === SEARCHTYPE.Pin) {\n      setSubscription(\n        interval(5000).subscribe((value) => {\n          getDataByPinCode(pinCode, todayDate)\n            .then(dataReceivedCallBack)\n            .then(filterByVaccineAndAge(vaccineType, ageGroup));\n        })\n      );\n    } else if (searchType === SEARCHTYPE.City) {\n      setSubscription(\n        interval(5000).subscribe((value) => {\n          getDataByCity(selectedDistrictId, todayDate)\n            .then(dataReceivedCallBack)\n            .then(filterByVaccineAndAge(vaccineType, ageGroup, whichDose));\n        })\n      );\n    }\n  };\n\n  const onStopSearch = () => {\n    sub.unsubscribe();\n    setIsSearchStarted(false);\n  };\n\n  const playAudio = () => {\n   \n    \n    ad.play();\n    const interval = setTimeout(() => {\n      ad.pause();\n      clearInterval(interval)\n    }, 5000);\n  };\n\n  return (\n    <Card className=\"app \">\n      {!isSearchStarted && <Filters beginSearch={beginSearch} />}\n\n      {isSearchStarted && (\n        <>\n          <div className=\"d-flex justify-center\">\n            <h2 class=\"bp3-heading\">\n              Currently Available at {data.length} center(s)\n            </h2>\n          </div>\n          <div className=\"d-flex justify-center\">\n            <h3 class=\"bp3-heading\">\n              Checking in every 5 seconds. Last Checked At {lastCheckAt}\n            </h3>\n          </div>\n          <div className=\"d-flex justify-center\">\n            <h4 class=\"bp3-heading\">Checking Slots for {searchCriteria}</h4>\n          </div>\n          <div className=\"d-flex justify-center btn-search\">\n            <Button\n              text=\"Stop and Start New Search\"\n              rightIcon=\"search\"\n              intent=\"warning\"\n              onClick={onStopSearch}\n            ></Button>\n          </div>\n          {data.length > 0 && <VaccinationSlots data={data}></VaccinationSlots>}\n        </>\n      )}\n    </Card>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nexport const getDataByCity = (cityId, date) => {\n  return axios\n    .get(\n      `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${cityId}&date=${date}`\n    )\n    .then((response) => {\n      return response.data.centers;\n    });\n};\n\n\n\nexport const getDataByPinCode = (pincode, date) => {\n  return axios\n    .get(\n      `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pincode}&date=${date}`\n    )\n    .then((response) => {\n      return response.data.centers;\n    });\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}